name: ($date:yyyyMMdd)$(rev:.rr) 

stages: 
  - stage: 'build' 
    condition: succeeded() 
    displayName: 'build-mvc'
    jobs:
      - job: 
        condition: succeeded()
        displayName: 'build-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps: 
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs: 
              version: '2.2.401'
          - script: | 
              dotnet build

  - stage: 'test' 
    condition: succeeded() 
    displayName: 'test-mvc'
    jobs:
      - job: 
        condition: succeeded()
        displayName: 'test-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps: 
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs: 
              version: '2.2.401'
          - script: | 
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"Rev-Team-4_ORBoard" /o:"uchan3" /d:sonar.login="9493587ec046e5d91f8e6feb78f7419dde70ce99" /d:sonar.host.url="https://sonarcloud.io"
              dotnet build
              dotnet test --logger trx -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=\"cobertura,opencover\" -p:Exclude=[xunit*]*
              dotnet sonarscanner end /d:sonar.login="9493587ec046e5d91f8e6feb78f7419dde70ce99" 
          - task: PublishTestResults@2
            displayName: 'publish result::unit-test'
            inputs:
              testRunner: VSTest
              testResultsFiles: '**/*.trx'
          - task: PublishCodeCoverageResults@1
            displayName: 'publish result::code-coverage'
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: '**/coverage.cobertura.xml'
#Update dockerfile
  - stage: 'pack' 
    condition: succeeded() 
    dependsOn: 
      - test
    displayName: 'pack-mvc'
    jobs:
      - job: 
        condition: succeeded()
        displayName: 'pack-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps: 
          - task: Docker@2
            inputs:
              command: 'login'
              containerRegistry: 'docker'
            displayName: 'docker login'
          - script: |
              docker image build --file Dockerfile --tag boardor .
              docker image tag boardor uchan3/boardor
              docker push uchan3/boardor
          - task: Docker@2
            inputs:
              command: 'logout'
              containerRegistry: 'docker'
            displayName: 'docker logout'
  
  - stage: 'deploy' 
    condition: succeeded('pack') 
    dependsOn: 
      - test
      - pack
    displayName: 'deploy-mvc'
    jobs:
      - job: 
        condition: succeeded()
        displayName: 'deploy-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps: 
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'Revature(41685a64-c080-4858-a663-06f43f898374)'
              appName: 'RBoardOR'
              containers: 'uchan3/boardor' 

trigger: 
  branches:
    include:
      - Urey-Azure-SQL-Test
    exclude: 
      - master

              